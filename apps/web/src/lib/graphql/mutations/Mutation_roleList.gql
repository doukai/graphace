mutation Mutation_roleList($composites: [RoleInput], $createGroupId: String, $createTime: Timestamp, $createUserId: String, $description: String, $id: ID, $isDeprecated: Boolean, $list: [RoleInput], $name: String, $permissions: [PermissionInput], $realm: RealmInput, $realmId: String, $roleComposite: [RoleCompositeInput], $updateTime: Timestamp, $updateUserId: String, $userRole: [UserRoleInput], $users: [UserInput], $version: Int, $where: RoleExpression, $skipNullArguments: Boolean = true, $update: Boolean = false, $mergeToList: [String]) {
  roleList(composites: $composites createGroupId: $createGroupId createTime: $createTime createUserId: $createUserId description: $description id: $id isDeprecated: $isDeprecated list: $list name: $name permissions: $permissions realm: $realm realmId: $realmId roleComposite: $roleComposite updateTime: $updateTime updateUserId: $updateUserId userRole: $userRole users: $users version: $version where: $where) @skipNullArguments(if: $skipNullArguments) @update(if: $update) @mergeToList(arguments: $mergeToList) {
    createGroupId
    createTime
    createUserId
    description
    id
    isDeprecated
    name
    realmId
    updateTime
    updateUserId
    version
  }
}