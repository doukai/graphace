mutation Mutation_user($id: ID, $name: String, $lastName: String, $login: String, $password: String, $email: String, $disable: Boolean, $groups: [GroupInput], $roles: [RoleInput], $realm: RealmInput, $isDeprecated: Boolean, $version: Int, $realmId: String, $createUserId: String, $createTime: Timestamp, $updateUserId: String, $updateTime: Timestamp, $createGroupId: String, $userGroup: [UserGroupInput], $userRole: [UserRoleInput], $where: UserExpression, $update: Boolean = false, $mergeToList: [String]) {
  user(id: $id name: $name lastName: $lastName login: $login password: $password email: $email disable: $disable groups: $groups roles: $roles realm: $realm isDeprecated: $isDeprecated version: $version realmId: $realmId createUserId: $createUserId createTime: $createTime updateUserId: $updateUserId updateTime: $updateTime createGroupId: $createGroupId userGroup: $userGroup userRole: $userRole where: $where) @update(if: $update) @mergeToList(arguments: $mergeToList) {
    id
    name
    lastName
    login
    email
    disable
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
  }
}