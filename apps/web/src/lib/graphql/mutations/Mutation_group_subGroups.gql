mutation Mutation_group_subGroups($group_id: String, $group_subGroups: [GroupInput], $first: Int, $last: Int, $offset: Int, $orderBy: GroupOrderBy, $groupBy: [String!], $after: ID, $before: ID, $id: StringExpression, $name: StringExpression, $description: StringExpression, $path: StringExpression, $deep: IntExpression, $parentId: StringExpression, $parent: GroupExpression, $subGroups: GroupExpression, $users: UserExpression, $roles: RoleExpression, $realm: RealmExpression, $mergeToList: [String]) {
  group(where: {id: {val: $group_id}}  subGroups: $group_subGroups) @mergeToList(arguments: $mergeToList) {
    id
    name
    description
    path
    deep
    parentId
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
    syncGroupPolicy
    subGroupsConnection(first: $first last: $last offset: $offset orderBy: $orderBy groupBy: $groupBy after: $after before: $before id: $id name: $name description: $description path: $path deep: $deep parentId: $parentId parent: $parent subGroups: $subGroups users: $users roles: $roles realm: $realm) {
      totalCount
      edges {
        node {
          id
          name
          description
          path
          deep
          parentId
          isDeprecated
          version
          realmId
          createUserId
          createTime
          updateUserId
          updateTime
          createGroupId
          syncGroupPolicy
          parent {
            id
            name
            description
            path
            deep
            parentId
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncGroupPolicy
          }
          subGroups {
            id
            name
            description
            path
            deep
            parentId
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncGroupPolicy
          }
          users {
            id
            name
            description
            lastName
            login
            email
            phones
            disable
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncUserPolicy
          }
          roles {
            id
            name
            description
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncRolePolicy
          }
          realm {
            name
            description
          }
        }
      }
    }
  }
}