mutation Mutation_group_users($group_id: String, $group_users: [UserInput], $first: Int, $last: Int, $offset: Int, $orderBy: UserOrderBy, $groupBy: [String!], $after: ID, $before: ID, $id: StringExpression, $name: StringExpression, $description: StringExpression, $lastName: StringExpression, $login: StringExpression, $salt: StringExpression, $hash: StringExpression, $email: StringExpression, $phones: StringExpression, $disable: BooleanExpression, $groups: GroupExpression, $roles: RoleExpression, $realm: RealmExpression, $includeDeprecated: Boolean, $version: IntExpression, $realmId: IntExpression, $createUserId: StringExpression, $createTime: StringExpression, $updateUserId: StringExpression, $updateTime: StringExpression, $createGroupId: StringExpression, $userPhones: UserPhonesExpression, $userGroup: UserGroupExpression, $userRole: UserRoleExpression, $mergeToList: [String]) {
  group(where: {id: {val: $group_id}}  users: $group_users) @mergeToList(arguments: $mergeToList) {
    id
    name
    description
    path
    deep
    parentId
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
    syncGroupPolicy
    usersConnection(first: $first last: $last offset: $offset orderBy: $orderBy groupBy: $groupBy after: $after before: $before id: $id name: $name description: $description lastName: $lastName login: $login salt: $salt hash: $hash email: $email phones: $phones disable: $disable groups: $groups roles: $roles realm: $realm includeDeprecated: $includeDeprecated version: $version realmId: $realmId createUserId: $createUserId createTime: $createTime updateUserId: $updateUserId updateTime: $updateTime createGroupId: $createGroupId userPhones: $userPhones userGroup: $userGroup userRole: $userRole) {
      totalCount
      edges {
        node {
          id
          name
          description
          lastName
          login
          email
          phones
          disable
          isDeprecated
          version
          realmId
          createUserId
          createTime
          updateUserId
          updateTime
          createGroupId
          syncUserPolicy
          groups {
            id
            name
            description
            path
            deep
            parentId
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncGroupPolicy
          }
          roles {
            id
            name
            description
            isDeprecated
            version
            realmId
            createUserId
            createTime
            updateUserId
            updateTime
            createGroupId
            syncRolePolicy
          }
          realm {
            name
            description
          }
        }
      }
    }
  }
}