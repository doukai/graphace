mutation Mutation_userList($createGroupId: String, $createTime: Timestamp, $createUserId: String, $disable: Boolean, $email: String, $groups: [GroupInput], $id: ID, $isDeprecated: Boolean, $lastName: String, $list: [UserInput], $login: String, $name: String, $password: String, $realm: RealmInput, $realmId: String, $roles: [RoleInput], $updateTime: Timestamp, $updateUserId: String, $userGroup: [UserGroupInput], $userRole: [UserRoleInput], $version: Int, $where: UserExpression, $skipNullArguments: Boolean = true, $update: Boolean = false, $mergeToList: [String]) {
  userList(createGroupId: $createGroupId createTime: $createTime createUserId: $createUserId disable: $disable email: $email groups: $groups id: $id isDeprecated: $isDeprecated lastName: $lastName list: $list login: $login name: $name password: $password realm: $realm realmId: $realmId roles: $roles updateTime: $updateTime updateUserId: $updateUserId userGroup: $userGroup userRole: $userRole version: $version where: $where) @skipNullArguments(if: $skipNullArguments) @update(if: $update) @mergeToList(arguments: $mergeToList) {
    createGroupId
    createTime
    createUserId
    disable
    email
    id
    isDeprecated
    lastName
    login
    name
    password
    realmId
    updateTime
    updateUserId
    version
  }
}