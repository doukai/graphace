mutation Mutation_userGroup_to($userGroup_id: ID, $userGroup_to: GroupInput, $id: StringExpression, $name: StringExpression, $parent: GroupExpression, $subGroups: GroupExpression, $users: UserExpression, $roles: RoleExpression, $realm: RealmExpression, $includeDeprecated: Boolean, $version: IntExpression, $realmId: StringExpression, $createUserId: StringExpression, $createTime: StringExpression, $updateUserId: StringExpression, $updateTime: StringExpression, $createGroupId: StringExpression, $parentId: IntExpression, $userGroup: UserGroupExpression, $groupRole: GroupRoleExpression, $update: Boolean = false, $mergeToList: [String]) {
  userGroup(id: $userGroup_id to: $userGroup_to) @update(if: $update) @mergeToList(arguments: $mergeToList) {
    id
    userId
    groupId
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
    to(id: $id name: $name parent: $parent subGroups: $subGroups users: $users roles: $roles realm: $realm includeDeprecated: $includeDeprecated version: $version realmId: $realmId createUserId: $createUserId createTime: $createTime updateUserId: $updateUserId updateTime: $updateTime createGroupId: $createGroupId parentId: $parentId userGroup: $userGroup groupRole: $groupRole) @update(if: $update) @mergeToList(arguments: $mergeToList) {
      id
      name
      isDeprecated
      version
      realmId
      createUserId
      createTime
      updateUserId
      updateTime
      createGroupId
      parentId
    }
  }
}