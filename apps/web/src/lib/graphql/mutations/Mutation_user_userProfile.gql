mutation Mutation_user_userProfile($age: Int, $createGroupId: String, $createTime: Timestamp, $createUserId: String, $disable: Boolean, $id: ID, $isDeprecated: Boolean, $login: String, $name: String, $organization: OrganizationInput, $organizationId: Int, $password: String, $phones: [String], $realmId: String, $roles: [RoleInput], $sex: Sex, $test1: [Int], $test2: [Boolean], $updateTime: Timestamp, $updateUserId: String, $userProfile: UserProfileInput, $version: Int, $where: UserExpression $skipNullArguments: Boolean = true, $update: Boolean = false) {
  user(age: $age createGroupId: $createGroupId createTime: $createTime createUserId: $createUserId disable: $disable id: $id isDeprecated: $isDeprecated login: $login name: $name organization: $organization organizationId: $organizationId password: $password phones: $phones realmId: $realmId roles: $roles sex: $sex test1: $test1 test2: $test2 updateTime: $updateTime updateUserId: $updateUserId userProfile: $userProfile version: $version where: $where) @skipNullArguments(if: $skipNullArguments) @update(if: $update) {
    age
    createGroupId
    createTime
    createUserId
    disable
    id
    isDeprecated
    login
    name
    organizationId
    password
    phones
    realmId
    sex
    test1
    test2
    updateTime
    updateUserId
    userDetail2
    version
    userProfile {
      address
      createGroupId
      createTime
      createUserId
      email
      id
      isDeprecated
      qq
      realmId
      updateTime
      updateUserId
      userId
      version
    }
  }
}