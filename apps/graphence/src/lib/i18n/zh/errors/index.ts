import type { NamespaceErrorsTranslation } from '../../i18n-types'

const zh: NamespaceErrorsTranslation = {
    code: {
        "-40101": '认证失败',
        "-40900": '数据已被更新',
        "-40901": '数据重复',
        "-99999": '访问异常'
    },
    http: {
        "400": '错误请求',
        "404": '未找到',
        "408": '请求超时',
        "500": '服务器错误',
        unknown: '未知错误'
    },
    types: {
        string: '文字',
        number: '数字',
        integer: '整数',
        boolean: '是或否',
        array: '数组',
        object: '对象',
        null: '空值'
    },
    formats: {
        date: '日期 (YYYY-MM-DD)',
        time: '时间 (HH:MM:SS)',
        'date-time': '日期时间 (ISO 8601)',
        'iso-time': 'ISO 时间',
        'iso-date-time': 'ISO 日期时间',
        duration: '时长 (ISO 8601)',
        uri: '统一资源标识符 (URI)',
        'uri-reference': 'URI 引用',
        'uri-template': 'URI 模板',
        email: '邮箱',
        hostname: '主机名',
        ipv4: 'IPv4 地址',
        ipv6: 'IPv6 地址',
        regex: '正则表达式',
        uuid: 'UUID',
        'json-pointer': 'JSON 指针',
        'relative-json-pointer': '相对 JSON 指针',
        byte: '字节 (Base64)',
        int32: '32 位整数',
        int64: '64 位整数',
        float: '浮点数',
        double: '双精度浮点数',
        password: '密码',
        binary: '二进制数据'
    },
    jsonSchema: {
        items: '数量不能超过 {limit} 个',
        additionalProperties: '不允许有额外的属性',
        anyOf: '数据必须符合 "anyOf" 中的某个模式',
        const: '数据必须等于指定常量',
        contains: '必须包含至少一个有效项目',
        dependentRequired: '当属性 {property} 存在时，必须同时包含 {deps}',
        discriminator: '必须通过 "{keyword}" 关键字校验',
        tag: '标签 "{tag}" 必须是字符串',
        mapping: '标签 "{tag}" 的值必须在 oneOf 中',
        enum: '数据必须等于允许值之一',
        false: '布尔模式为 false, 数据无效',
        format: '请输入有效的{format}',
        formatMaximum: '必须 {comparison} {limit}',
        formatMinimum: '必须 {comparison} {limit}',
        if: '必须符合 "{failingKeyword}" 模式',
        maximum: '数值必须 {comparison} {limit}',
        maxItems: '数量不能超过 {limit} 个',
        maxLength: '长度不能超过 {limit} 个字符',
        maxProperties: '属性数量不能超过 {limit} 个',
        minimum: '数值必须 {comparison} {limit}',
        minItems: '数量不能少于 {limit} 个',
        minLength: '长度不能少于 {limit} 个字符',
        minProperties: '属性数量不能少于 {limit} 个',
        multipleOf: '数值必须是 {multipleOf} 的倍数',
        not: '数据不能符合 "not" 模式',
        oneOf: '数据必须仅符合 "oneOf" 中的一个模式',
        pattern: '数据必须匹配正则 "{pattern}"',
        patternRequired: '必须有匹配模式 "{missingPattern}" 的属性',
        propertyNames: '属性名无效',
        required: '必需项目',
        type: '请输入{type}',
        unevaluatedItems: '数量不能超过 {len} 个',
        unevaluatedProperties: '不允许存在未定义的属性',
        uniqueItems: '项目不能重复（第 {i} 项与第 {j} 项重复）',
        default: '必须通过 "{keyword}" 关键字校验'
    }
}

export default zh;