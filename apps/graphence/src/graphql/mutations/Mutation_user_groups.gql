mutation Mutation_user_groups($user_id: String, $user_groups: [GroupInput]$id: StringExpression$name: StringExpression$description: StringExpression$path: StringExpression$deep: IntExpression$parentId: StringExpression$parent: GroupExpression$subGroups: GroupExpression$users: UserExpression$roles: RoleExpression$realm: RealmExpression$includeDeprecated: Boolean$version: IntExpression$realmId: IntExpression$createUserId: StringExpression$createTime: StringExpression$updateUserId: StringExpression$updateTime: StringExpression$createGroupId: StringExpression$first: Int$last: Int$offset: Int$orderBy: GroupOrderBy$groupBy: [String!]$includeId: Boolean = true $includeName: Boolean = true $includeDescription: Boolean = true $includePath: Boolean = true $includeDeep: Boolean = true $includeParentId: Boolean = true $includeIsDeprecated: Boolean = true $includeVersion: Boolean = true $includeRealmId: Boolean = true $includeCreateUserId: Boolean = true $includeCreateTime: Boolean = true $includeUpdateUserId: Boolean = true $includeUpdateTime: Boolean = true $includeCreateGroupId: Boolean = true $includeSyncGroupPolicy: Boolean = true $includeParent: Boolean = true $includeSubGroups: Boolean = true $includeUsers: Boolean = true $includeRoles: Boolean = true $includeRealm: Boolean = true ) {
  user(where: { id: { val: $user_id } }  groups: $user_groups ) @merge {
    id
    name
    description
    lastName
    login
    email
    phones
    disable
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
    syncUserPolicy
    groupsConnection(id: $id name: $name description: $description path: $path deep: $deep parentId: $parentId parent: $parent subGroups: $subGroups users: $users roles: $roles realm: $realm includeDeprecated: $includeDeprecated version: $version realmId: $realmId createUserId: $createUserId createTime: $createTime updateUserId: $updateUserId updateTime: $updateTime createGroupId: $createGroupId first: $first last: $last offset: $offset orderBy: $orderBy groupBy: $groupBy ) {
      totalCount
      edges {
        node {
          id @include(if: $includeId)
          name @include(if: $includeName)
          description @include(if: $includeDescription)
          path @include(if: $includePath)
          deep @include(if: $includeDeep)
          parentId @include(if: $includeParentId)
          isDeprecated @include(if: $includeIsDeprecated)
          version @include(if: $includeVersion)
          realmId @include(if: $includeRealmId)
          createUserId @include(if: $includeCreateUserId)
          createTime @include(if: $includeCreateTime)
          updateUserId @include(if: $includeUpdateUserId)
          updateTime @include(if: $includeUpdateTime)
          createGroupId @include(if: $includeCreateGroupId)
          syncGroupPolicy @include(if: $includeSyncGroupPolicy)
          parent @include(if: $includeParent) {
            id
            name
            description
          }
          subGroups @include(if: $includeSubGroups) {
            id
            name
            description
          }
          users @include(if: $includeUsers) {
            id
            name
            description
          }
          roles @include(if: $includeRoles) {
            id
            name
            description
          }
          realm @include(if: $includeRealm) {
            name
            description
          }
        }
      }
    }
  }
}