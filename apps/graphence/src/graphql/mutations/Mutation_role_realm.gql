mutation Mutation_role_realm($role_id: String, $role_realm: RealmInput$id: StringExpression$name: StringExpression$description: StringExpression$includeDeprecated: Boolean$version: IntExpression$realmId: IntExpression$createUserId: StringExpression$createTime: StringExpression$updateUserId: StringExpression$updateTime: StringExpression$createGroupId: StringExpression$groupBy: [String!]$includeId: Boolean = true $includeName: Boolean = true $includeDescription: Boolean = true $includeIsDeprecated: Boolean = true $includeVersion: Boolean = true $includeRealmId: Boolean = true $includeCreateUserId: Boolean = true $includeCreateTime: Boolean = true $includeUpdateUserId: Boolean = true $includeUpdateTime: Boolean = true $includeCreateGroupId: Boolean = true ) {
  role(where: { id: { val: $role_id } }  realm: $role_realm ) @merge {
    id
    name
    description
    isDeprecated
    version
    realmId
    createUserId
    createTime
    updateUserId
    updateTime
    createGroupId
    syncRolePolicy
    realm(id: $id name: $name description: $description includeDeprecated: $includeDeprecated version: $version realmId: $realmId createUserId: $createUserId createTime: $createTime updateUserId: $updateUserId updateTime: $updateTime createGroupId: $createGroupId groupBy: $groupBy ) {
      id @include(if: $includeId)
      name @include(if: $includeName)
      description @include(if: $includeDescription)
      isDeprecated @include(if: $includeIsDeprecated)
      version @include(if: $includeVersion)
      realmId @include(if: $includeRealmId)
      createUserId @include(if: $includeCreateUserId)
      createTime @include(if: $includeCreateTime)
      updateUserId @include(if: $includeUpdateUserId)
      updateTime @include(if: $includeUpdateTime)
      createGroupId @include(if: $includeCreateGroupId)
    }
  }
}