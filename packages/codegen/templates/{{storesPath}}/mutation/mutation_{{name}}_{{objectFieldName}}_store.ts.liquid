import type { LoadEvent, RequestEvent } from '@sveltejs/kit';
import { type GraphQLStore } from "@graphace/ui-graphql";
import { createGraphQLMutationStore } from '~/utils';
import type { {{ objectFieldInfo.fieldTypeName }}Input, {{ fieldTypeName }} } from '~/{{ schemaTypesPath }}';

const query = /* GraphQL */ `mutation Mutation_{{ fieldName }}_{{ objectFieldInfo.fieldName}}(${{ fieldName }}_{{ fieldTypeIdName }}: String, ${{ fieldName }}_{{ objectFieldInfo.fieldName}}: {% if objectFieldInfo.isListType %}[{{ objectFieldInfo.fieldTypeName }}Input]{% else %}{{ objectFieldInfo.fieldTypeName }}Input{% endif %}) {
  {{ fieldName }}(where: { {{ fieldTypeIdName }}: { val: ${{ fieldName }}_{{ fieldTypeIdName }} } }, {{ objectFieldInfo.fieldName}}: ${{ fieldName }}_{{ objectFieldInfo.fieldName}}) @merge {
    {%- for field in fields %}
    {%- if field.isLeafType and field.isAggregate == false %}
    {{ field.fieldName }}
    {%- endif %}
    {%- endfor %}
    {{ objectFieldInfo.fieldName}} {
      {%- for field in objectFieldInfo.fields %}
      {%- if field.isLeafType and field.isAggregate == false %}
      {{ field.fieldName }}
      {%- elsif field.isFile %}
      {{ field.fieldName }} {
        id
        name
      }
      {%- elsif field.isNamed and field.isAggregate == false %}
      {{ field.fieldName }}{% if field.isListType and field.isSelect == false %}(first: 3){% endif %} {
        {{ field.fieldTypeIdName }}
        name
        description
      }
      {%- endif %}
      {%- endfor %}
    }
  }
}`;

export function createMutation_{{ fieldName }}_{{ objectFieldInfo.fieldName}}_Store(event: LoadEvent | RequestEvent): Mutation_{{ fieldName }}_{{ objectFieldInfo.fieldName}}_Store {
  return createGraphQLMutationStore<{{ fieldTypeName }}, { {{ fieldName }}_{{ fieldTypeIdName }}: string, {{ fieldName }}_{{ objectFieldInfo.fieldName}}: {{ objectFieldInfo.fieldTypeName }}Input{% if objectFieldInfo.isListType %}[]{% endif %}{% if objectFieldInfo.isNonNullType == false %} | null{% endif %} }>(query, event);
}

export type Mutation_{{ fieldName }}_{{ objectFieldInfo.fieldName}}_Store = GraphQLStore<{{ fieldTypeName }}, { {{ fieldName }}_{{ fieldTypeIdName }}: string, {{ fieldName }}_{{ objectFieldInfo.fieldName}}: {{ objectFieldInfo.fieldTypeName }}Input{% if objectFieldInfo.isListType %}[]{% endif %}{% if objectFieldInfo.isNonNullType == false %} | null{% endif %} }>;