<script lang="ts">
	import type { Errors } from '@graphace/commons';
	import { EnumItem } from '@graphace/ui-graphql';
	import LL from '$i18n/i18n-svelte';

	export let value: string | (string | null | undefined)[] | null | undefined;
	export let list: boolean = false;
	export let name: string;
	export let label: string;
	export let errors: Errors | undefined = undefined;
	export let readonly = false;
	export let disabled = false;
	export let placeholder: string = '';

	$: enums = [
		{%- if enumValues %}
		{%- for enumValue in enumValues %}
		{ name: $LL.graphql.enums.{{ name }}.values.{{ enumValue.name }}.name(), value: '{{ enumValue.value }}'{% if enumValue.description %}, description: {{ enumValue.description }}{% endif %} }{% if forloop.last == false %},{% endif %}
		{%- endfor %}
		{%- endif %}
	];
</script>

<EnumItem bind:value {list} {enums} {name} {label} {errors} {readonly} {disabled} {placeholder} />
