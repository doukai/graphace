<script lang="ts">
	import { getContext } from 'svelte';
	import type { Readable } from 'svelte/store';
	import type { StringExpression, Sort } from '@graphace/graphql';
	import { EnumTh } from '@graphace/ui-graphql';
	import type { TranslationFunctions } from '$i18n/i18n-types';

	export let name: string;
	export let value: StringExpression | null | undefined = undefined;
	export let sort: Sort | null | undefined = undefined;
	let className: string | undefined = undefined;
	export { className as class };
	const LL = getContext<Readable<TranslationFunctions>>('LL');

	$: enums = [
		{%- if enumValues %}
		{%- for enumValue in enumValues %}
		{ name: $LL.graphql.enums.{{ name }}.values.{{ enumValue.name }}.name(), value: '{{ enumValue.value }}'{% if enumValue.description %}, description: '{{ enumValue.description }}'{% endif %} }{% if forloop.last == false %},{% endif %}
		{%- endfor %}
		{%- endif %}
	];
</script>

<EnumTh {name} bind:value bind:sort {enums} class={className} on:filter />