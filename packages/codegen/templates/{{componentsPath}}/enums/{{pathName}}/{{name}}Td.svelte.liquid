<script lang="ts">
	import type { Error } from '@graphace/commons/types';
	import { EnumTd } from '@graphace/ui-graphql/components/table';
	import { {{ name }} } from '~/lib/types/schema';

	export let value: string | (string | null | undefined)[] | null | undefined;
	export let list: boolean = false;
	export let name: string;
	export let error: Error | undefined = undefined;
	export let readonly = false;
	export let disabled = false;
	export let placeholder: string = '';

	let enums = [
		{%- if enumValues %}
		{%- for enumValue in enumValues %}
		{ name: {{ name }}.{{ enumValue.name }}, value: {{ name }}.{{ enumValue.value }}{% if enumValue.description %}, {{ name }}.{{ enumValue.description }}{% endif %} }{% if forloop.last == false %},{% endif %}
		{%- endfor %}
		{%- endif %}
	];
</script>

<EnumTd bind:value {list} {enums} {name} {error} {readonly} {disabled} {placeholder} />
