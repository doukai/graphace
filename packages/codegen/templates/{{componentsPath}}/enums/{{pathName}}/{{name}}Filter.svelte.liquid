<script lang="ts">
	import { getContext } from 'svelte';
	import type { Readable } from 'svelte/store';
	import type { StringExpression } from '@graphace/graphql';
	import { EnumFilter } from '@graphace/ui-graphql';
	import type { TranslationFunctions } from '$i18n/i18n-types';

	export let expression: StringExpression | null | undefined;
	export let name: string;
	export let label: string;
	export let className: string = '';
	export let selectClassName: string = '';
	const LL = getContext<Readable<TranslationFunctions>>('LL');

	$: enums = [
		{%- if enumValues %}
		{%- for enumValue in enumValues %}
		{ name: $LL.graphql.enums.{{ name }}.values.{{ enumValue.name }}.name(), value: '{{ enumValue.value }}'{% if enumValue.description %}, description: '{{ enumValue.description }}'{% endif %} }{% if forloop.last == false %},{% endif %}
		{%- endfor %}
		{%- endif %}
	];
</script>

<EnumFilter bind:expression {name} {enums} {label} {className} {selectClassName} />
