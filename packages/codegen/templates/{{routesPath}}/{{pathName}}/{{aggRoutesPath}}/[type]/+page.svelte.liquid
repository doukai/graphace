<script lang="ts">
	import { Card } from '@graphace/ui';
	import {{ name }}Bar from '~/{{ aggPath }}/{{ name | paramCase }}/{{ name }}Bar.svelte';
	import {{ name }}Line from '~/{{ aggPath }}/{{ name | paramCase }}/{{ name }}Line.svelte';
	import {{ name }}Pie from '~/{{ aggPath }}/{{ name | paramCase }}/{{ name }}Pie.svelte';
	import {{ name }}AggTable from '~/{{ aggPath }}/{{ name | paramCase }}/{{ name }}AggTable.svelte';
	import type { {{ name }}AggStore } from '~/{{ storesPath }}/{{ name | paramCase }}/{{ name | camelCase }}AggStore';
	import type { PageData } from './$houdini';

	export let data: PageData;

	const {
		fields,
		queryArguments,
		showHeader,
		showFooter,
		showOptionButton,
		showFilterButton,
		showBookmarkButton
	} = data;

	const {{ name }}Agg = data.{{ name }}Agg as {{ name }}AggStore;

	const components: Record<string, any> = {
		bar: {{ name }}Bar,
		line: {{ name }}Line,
		pie: {{ name }}Pie,
		table: {{ name }}AggTable
	};

	const component = components[data.type];
</script>

<Card>
	<svelte:component
		this={component}
		isFetching={${{ name }}Agg.isFetching}
		connection={${{ name }}Agg.connection}
		{fields}
		{queryArguments}
		{showHeader}
		{showFooter}
		{showOptionButton}
		{showFilterButton}
		{showBookmarkButton}
		on:query={(e) => {{ name }}Agg.fetch(e.detail.fields, e.detail.queryArguments)}
	/>
</Card>
