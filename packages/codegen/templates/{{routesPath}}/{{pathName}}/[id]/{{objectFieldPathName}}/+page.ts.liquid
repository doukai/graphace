import type { LoadEvent } from '@sveltejs/kit';
import { fetchQuery_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store } from '~/{{ storesPath }}/query/query_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_store';
import { createMutation_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_store';
import { createMutation_{{ objectFieldInfo.fieldTypeName | camelCase }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ objectFieldInfo.fieldTypeName | camelCase }}_store';
{%- if hasFileField %}
import { createMutation_singleUpload_Store } from '~/{{ storesPath }}/mutation/mutation_singleUpload_store';
{%- endif %}
{%- if useAuth %}
import { getPermissionsStore } from '~/utils';
{%- endif %}
import type { LayoutLoad } from './$types';

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await getPermissionsStore(event).getTypes('{{ objectFieldInfo.fieldTypeName }}');
    {%- endif %}
    return {
        {%- if hasFileField %}
        mutation_singleUpload_Store = createMutation_singleUpload_Store(event),
        {%- endif %}
        query_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store: await fetchQuery_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store(event, { {{ fieldTypeName | camelCase }}_{{ idName }}: event.params.id }),
        mutation_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store: createMutation_{{ fieldTypeName | camelCase }}_{{ objectFieldInfo.fieldName }}_Store(event),
        mutation_{{ objectFieldInfo.fieldTypeName | camelCase }}_Store: createMutation_{{ objectFieldInfo.fieldTypeName | camelCase }}_Store(event)
    };
}