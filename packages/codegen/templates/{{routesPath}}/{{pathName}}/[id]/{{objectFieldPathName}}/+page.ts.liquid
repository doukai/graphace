import type { LoadEvent } from '@sveltejs/kit';
import type { LayoutLoad } from '$types';
import { type Errors, getNode, getErrors } from '@graphace/commons';
import { load_Query_{{ name | camelCase }}_{{ objectFieldName }} } from '$houdini';
import type { {{ mutationTypeName }}{{ objectFieldTypeName }}Args } from '~/{{ schemaTypesPath }}';
{%- if useAuth %}
import { permissions } from '~/utils/auth-util';
{%- endif %}

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await permissions.getTypes('{{ objectFieldTypeName }}');
    {%- endif %}
    const node: {{ mutationTypeName }}{{ objectFieldTypeName }}Args = getNode(event.url) || {};
	const errors: Record<string, Errors> = getErrors(event.url) || {};
    return {
        node,
        errors,
        ...(await load_Query_{{ name | camelCase }}_{{ objectFieldName }}({ event, variables: { {{ name | camelCase }}_{{ idName }}: { val: event.params.id } } }))
    };
}