import type { LoadEvent } from '@sveltejs/kit';
import { fetchQuery_{{ name | camelCase }}_{{ fieldInfo.fieldName }}Connection_Store } from '~/{{ storesPath }}/query/query_{{ name | camelCase }}_{{ fieldInfo.fieldName }}Connection_store';
import { createMutation_{{ name | camelCase }}_{{ fieldInfo.fieldName }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ name | camelCase }}_{{ fieldInfo.fieldName }}_store';
import { createMutation_{{ fieldObjectInfo.name | camelCase }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ fieldObjectInfo.name | camelCase }}_store';
{%- if hasFileField %}
import { createMutation_singleUpload_Store } from '~/{{ storesPath }}/mutation/mutation_singleUpload_store';
{%- endif %}
{%- if useAuth %}
import { permissions } from '~/utils';
{%- endif %}
import type { LayoutLoad } from './$types';

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await permissions.fetchPermissions('{{ fieldObjectInfo.name }}');
    {%- endif %}
    return {
        {%- if hasFileField %}
        mutation_singleUpload_Store: createMutation_singleUpload_Store(event),
        {%- endif %}
        query_{{ name | camelCase }}_{{ fieldInfo.fieldName }}Connection_Store: await fetchQuery_{{ name | camelCase }}_{{ fieldInfo.fieldName }}Connection_Store(event, { {{ name | camelCase }}_{{ idName }}: event.params.id, first: 10 }),
        mutation_{{ name | camelCase }}_{{ fieldInfo.fieldName }}_Store: createMutation_{{ name | camelCase }}_{{ fieldInfo.fieldName }}_Store(event),
        mutation_{{ fieldObjectInfo.name | camelCase }}_Store: createMutation_{{ fieldObjectInfo.name | camelCase }}_Store(event)
    };
}