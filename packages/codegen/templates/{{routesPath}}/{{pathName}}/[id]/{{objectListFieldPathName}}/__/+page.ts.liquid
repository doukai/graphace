import type { LoadEvent } from '@sveltejs/kit';
import type { LayoutLoad } from './$types';
import { fetchQuery_{{ objectFieldTypeName | camelCase }}{% if connectionField %}Connection{% else %}List{% endif %}_Store } from '~/{{ storesPath }}/query/query_{{ objectFieldTypeName | camelCase }}{% if connectionField %}Connection{% else %}List{% endif %}_store';
import { createMutation_{{ name | camelCase }}_{{ objectFieldName }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ name | camelCase }}_{{ objectFieldName }}_store';
import { createMutation_{{ objectFieldTypeName | camelCase }}_Store } from '~/{{ storesPath }}/mutation/mutation_{{ objectFieldTypeName | camelCase }}_store';
{%- if hasFileField %}
import { createMutation_singleUpload_Store } from '~/{{ storesPath }}/mutation/mutation_singleUpload_store';
{%- endif %}
{%- if useAuth %}
import { getPermissionsStore } from '~/utils';
{%- endif %}

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await getPermissionsStore(event).getTypes('{{ objectFieldTypeName }}');
    {%- endif %}
	{%- if pairField %}
    const notBelongToParent = { not: true, {{ pairField.name }}: { {{ idName }}: { val: event.params.id } } };
	{%- endif %}
    return {
        id: event.params.{{ idName }},
        {%- if pairField %}
        notBelongToParent,
        {%- endif %}
        {%- if hasFileField %}
        mutation_singleUpload_Store = createMutation_singleUpload_Store(event),
        {%- endif %}
        query_{{ objectFieldTypeName | camelCase }}{% if connectionField %}Connection{% else %}List{% endif %}_Store: await fetchQuery_{{ objectFieldTypeName | camelCase }}{% if connectionField %}Connection{% else %}List{% endif %}_Store(event, {% if connectionField %}{ first: 10{% if pairField %}, exs: [notBelongToParent]{% endif %} }{% else %}{% if pairField %}, { exs: [notBelongToParent] }{% endif %}{% endif %}),
        mutation_{{ name | camelCase }}_{{ objectFieldName }}_Store: createMutation_{{ name | camelCase }}_{{ objectFieldName }}_Store(event),
        mutation_{{ objectFieldTypeName | camelCase }}_Store: createMutation_{{ objectFieldTypeName | camelCase }}_Store(event)
    };
}