import type { LoadEvent } from '@sveltejs/kit';
import type { LayoutLoad } from '$types';
import { type Errors, getNode, getErrors } from '@graphace/commons';
import type { {{ mutationTypeName }}{{ objectFieldTypeName }}Args } from '~/{{ schemaTypesPath }}';
import { {% if connectionField %}load_Query_{{ objectFieldTypeName | camelCase }}Connection{% else %}load_Query_{{ objectFieldTypeName | camelCase }}List{% endif %} } from '$houdini';

export const load: LayoutLoad = async (event: LoadEvent) => {
    const node: {{ mutationTypeName }}{{ objectFieldTypeName }}Args = getNode(event.url) || {};
	const errors: Record<string, Errors> = getErrors(event.url) || {};
    return {
        node,
        errors,
        ...(await {% if connectionField %}load_Query_{{ objectFieldTypeName | camelCase }}Connection({ event, variables: { first: 10 } })){% else %}load_Query_{{ objectFieldTypeName | camelCase }}List({ event })){% endif %}
    };
}