import type { LoadEvent } from '@sveltejs/kit';
import type { LayoutLoad } from '$types';
import { type Errors, getNode, getErrors } from '@graphace/commons';
import type { {{ mutationTypeName }}{{ objectFieldTypeName }}Args } from '~/lib/types/schema';
import { {% if connectionField %}load_Query_{{ objectFieldTypeName | camelCase }}Connection{% else %}load_Query_{{ objectFieldTypeName | camelCase }}List{% endif %} } from '$houdini';
{%- if useAuth %}
import { permissions } from '~/utils/auth-util';
{%- endif %}

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await permissions.getTypes('{{ objectFieldTypeName }}');
    {%- endif %}
    const nodes: {{ mutationTypeName }}{{ objectFieldTypeName }}Args[] = getNode(event.url) || [];
	const errors: Record<number, Errors> = getErrors(event.url) || {};
    return {
        nodes,
        errors,
        ...(await {% if connectionField %}load_Query_{{ objectFieldTypeName | camelCase }}Connection({ event, variables: { first: 10 } })){% else %}load_Query_{{ objectFieldTypeName | camelCase }}List({ event })){% endif %}
    };
}