import type { LoadEvent } from '@sveltejs/kit';
import type { LayoutLoad } from '$types';
import { type Errors, getNode, getErrors } from '@graphace/commons';
import type { {{ mutationTypeName }}{{ name }}Args } from '~/{{ schemaTypesPath }}';
{%- if useAuth %}
import { permissions } from '~/utils';
{%- endif %}

export const load: LayoutLoad = async (event: LoadEvent) => {
    {%- if useAuth %}
    await permissions.getTypes('{{ name }}');
    {%- endif %}
    const node: {{ mutationTypeName }}{{ name }}Args = getNode(event.url) || {};
	const errors: Record<string, Errors> = getErrors(event.url) || {};
    return { node, errors };
}